name: build_publish

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: python -m pip install --upgrade setuptools wheel cmake build

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          # configure cibuildwheel to build native archs ('auto'), and some emulated ones
          CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x

      - name: Store
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: dist/*
          if-no-files-found: error

  source-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: python -m pip install --upgrade setuptools wheel cmake build

    - name: Build source distribution
      shell: bash
      run: python -m build . --sdist

    - name: Store
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/*
        if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs: [matrix-build, linux-build, source-build]
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - name: Download
      uses: actions/download-artifact@v4
      with:
        path: dist/*

    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
